//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace FortisCollections.Toolcore.Indexing.Runner.Indexing {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="IndexingSoap", Namespace="http://tempuri.org/")]
    public partial class Indexing : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RebuildAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback RebuildOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckMultipleOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Indexing() {
            this.Url = global::FortisCollections.Toolcore.Indexing.Runner.Properties.Settings.Default.FortisCollections_Toolcore_Indexing_Runner_Indexing_Indexing;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event RebuildAllCompletedEventHandler RebuildAllCompleted;
        
        /// <remarks/>
        public event RebuildCompletedEventHandler RebuildCompleted;
        
        /// <remarks/>
        public event CheckCompletedEventHandler CheckCompleted;
        
        /// <remarks/>
        public event CheckMultipleCompletedEventHandler CheckMultipleCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RebuildAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Progress[] RebuildAll() {
            object[] results = this.Invoke("RebuildAll", new object[0]);
            return ((Progress[])(results[0]));
        }
        
        /// <remarks/>
        public void RebuildAllAsync() {
            this.RebuildAllAsync(null);
        }
        
        /// <remarks/>
        public void RebuildAllAsync(object userState) {
            if ((this.RebuildAllOperationCompleted == null)) {
                this.RebuildAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRebuildAllOperationCompleted);
            }
            this.InvokeAsync("RebuildAll", new object[0], this.RebuildAllOperationCompleted, userState);
        }
        
        private void OnRebuildAllOperationCompleted(object arg) {
            if ((this.RebuildAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RebuildAllCompleted(this, new RebuildAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Rebuild", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Progress[] Rebuild(string[] indexNames) {
            object[] results = this.Invoke("Rebuild", new object[] {
                        indexNames});
            return ((Progress[])(results[0]));
        }
        
        /// <remarks/>
        public void RebuildAsync(string[] indexNames) {
            this.RebuildAsync(indexNames, null);
        }
        
        /// <remarks/>
        public void RebuildAsync(string[] indexNames, object userState) {
            if ((this.RebuildOperationCompleted == null)) {
                this.RebuildOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRebuildOperationCompleted);
            }
            this.InvokeAsync("Rebuild", new object[] {
                        indexNames}, this.RebuildOperationCompleted, userState);
        }
        
        private void OnRebuildOperationCompleted(object arg) {
            if ((this.RebuildCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RebuildCompleted(this, new RebuildCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Check", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Progress Check(string id) {
            object[] results = this.Invoke("Check", new object[] {
                        id});
            return ((Progress)(results[0]));
        }
        
        /// <remarks/>
        public void CheckAsync(string id) {
            this.CheckAsync(id, null);
        }
        
        /// <remarks/>
        public void CheckAsync(string id, object userState) {
            if ((this.CheckOperationCompleted == null)) {
                this.CheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckOperationCompleted);
            }
            this.InvokeAsync("Check", new object[] {
                        id}, this.CheckOperationCompleted, userState);
        }
        
        private void OnCheckOperationCompleted(object arg) {
            if ((this.CheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckCompleted(this, new CheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckMultiple", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Progress[] CheckMultiple(string[] ids) {
            object[] results = this.Invoke("CheckMultiple", new object[] {
                        ids});
            return ((Progress[])(results[0]));
        }
        
        /// <remarks/>
        public void CheckMultipleAsync(string[] ids) {
            this.CheckMultipleAsync(ids, null);
        }
        
        /// <remarks/>
        public void CheckMultipleAsync(string[] ids, object userState) {
            if ((this.CheckMultipleOperationCompleted == null)) {
                this.CheckMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckMultipleOperationCompleted);
            }
            this.InvokeAsync("CheckMultiple", new object[] {
                        ids}, this.CheckMultipleOperationCompleted, userState);
        }
        
        private void OnCheckMultipleOperationCompleted(object arg) {
            if ((this.CheckMultipleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckMultipleCompleted(this, new CheckMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Progress {
        
        private string idField;
        
        private bool completeField;
        
        private long processedField;
        
        private string[] messagesField;
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public bool Complete {
            get {
                return this.completeField;
            }
            set {
                this.completeField = value;
            }
        }
        
        /// <remarks/>
        public long Processed {
            get {
                return this.processedField;
            }
            set {
                this.processedField = value;
            }
        }
        
        /// <remarks/>
        public string[] Messages {
            get {
                return this.messagesField;
            }
            set {
                this.messagesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void RebuildAllCompletedEventHandler(object sender, RebuildAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RebuildAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RebuildAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Progress[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Progress[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void RebuildCompletedEventHandler(object sender, RebuildCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RebuildCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RebuildCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Progress[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Progress[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CheckCompletedEventHandler(object sender, CheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Progress Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Progress)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CheckMultipleCompletedEventHandler(object sender, CheckMultipleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Progress[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Progress[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591